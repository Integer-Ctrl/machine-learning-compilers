{
	// Place your machine-learning-compilers workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"load 3 floats": {
	"scope": "cpp",
	"prefix": "ldr3",
	"body": [
        "ldrPost(d$1, x$2, 2 * 4),              //    ldr q$1, [x$2]",
        "ld1(s$1, 2, x$2), sub(x$2, x$2, 2 * 4),  // revert offset from load of s$1"
	],
	"description": "A float element store"
	},
	"store 3 floats": {
	"scope": "cpp",
	"prefix": "str3",
	"body": [
        "strPost(d$1, x$2, 2 * 4),              //    str q$1, [x$2]",
        "st1(s$1, 2, x$2), sub(x$2, x$2, 2 * 4),  // revert offset from store of s$1"
	],
	"description": "A float element store"
	}
	
}